name: Go CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    name: Test & Lint
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
        id: go

      - name: Check out code
        uses: actions/checkout@v4

      - name: Install golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: latest

      - name: Tidy
        run: make tidy

      - name: Lint
        run: make lint

      - name: Test
        run: make test

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: sanjibdevnathlabs/gosafejson # Optional. Defaults to repository slug
          fail_ci_if_error: true # Optional: Fail the CI job if Codecov fails to upload

  benchmark:
    name: Benchmark
    needs: test # Run after tests pass
    if: github.event_name == 'pull_request' # Only run on pull requests
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Check out code
        uses: actions/checkout@v4

      - name: Run benchmarks
        run: make bench > bench.txt

      - name: Store benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: Go Benchmark
          tool: 'go' # Benchmark tool type
          output-file-path: bench.txt
          # Use the GITHUB_TOKEN for commenting
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # Auto-push benchmark results to gh-pages branch
          auto-push: true
          # Fail workflow if benchmark errors
          fail-on-error: true
          # Add comment to PR
          comment-on-alert: true
          # Fail workflow if benchmark regresses
          alert-threshold: '200%' # Fail if 2x slower
          alert-comment-cc-users: '@sanjibdevnathlabs' # Optional: CC users on alert comment
