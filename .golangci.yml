run:
  # default concurrency is 4. Lower for smaller machines.
  # concurrency: 4

  # timeout for analysis, e.g. 30s, 5m, default is 1m
  timeout: 5m

  # exit code when issues were found, default is 1
  issues-exit-code: 1

  # include test files or not, default is true
  tests: true

  # which dirs to skip: issues from them won't be reported.
  # Can use regexp here: `generated.*`, `.*\.my\.go`.
  # Default is empty list.
  skip-dirs:
    # - vendor/

  # which files to skip: they will be analyzed, but issues from them won't be reported.
  # Can use regexp here: `.*\.my\.go`.
  # Default is empty list.
  # skip-files:
    # - "*_test.go"

  # list of build tags, all linters use it. Default is empty list.
  # build-tags:
    # - integration

  go: '1.24' # Specify the Go version

# linters-settings:
#   govet:
#     # report about shadowed variables
#     check-shadowing: true
#   gocyclo:
#     # minimal code complexity to report, 30 by default (but we recommend 10-20)
#     min-complexity: 15
#   maligned:
#     # print struct alignment analysis
#     suggest-new: true
#   dupl:
#     # threshold for code duplication, default is 100
#     threshold: 100
#   goconst:
#     # minimal length of string constant, 3 by default
#     min-len: 3
#     # minimal occurrences count to analyze, 3 by default
#     min-occurrences: 3
#   misspell:
#     # Correct spellings using locale preferences for US or UK. Default is to use a neutral variety of English.
#     # Setting locale to US will correct the British spelling of 'colour' to 'color'. \
#     locale: US
#   lll:
#     # max line length, handled by gofmt generally
#     line-length: 140
#   unused:
#     # treat code as a program (vs library) and report unused exported identifiers
#     check-exported: false
#   unparam:
#     # call graph construction algorithm (cha, rta). In general, use cha for libraries, rta for applications
#     algo: cha
#     # Inspect tests
#     check-exported: false
#   gocritic:
#     enabled-tags:
#       - diagnostic
#       - experimental
#       - opinionated
#       - performance
#       - style
#     disabled-checks:
#       - hugeParam # Check for params that are large in size - useful but can be noisy
#       - rangeValCopy # Checks for loops that copy big objects - useful but can be noisy

linters-settings:
  # Customize individual linter settings here if needed
  # Example:
  # govet:
  #   check-shadowing: true
  gofmt:
    # Enable simplifying code
    simplify: true
  goimports:
    # Put local imports after 3rd-party imports
    local-prefixes: github.com/sanjibdevnathlabs/gosafejson

linters:
  # Linters are executed in the order they are defined.
  # We recommend enabling a specific set of linters rather than using `enable-all`.
  enable:
    # Default linters group (see https://golangci-lint.run/usage/linters/)
    - errcheck
    - gosimple
    - govet
    - ineffassign
    - staticcheck
    - typecheck
    - unused
    # Additional recommended linters
    - bodyclose
    # - depguard # Consider enabling later if needed
    - dogsled
    - dupl
    - exportloopref
    - goconst
    - gocritic
    - gocyclo
    - gofmt
    - goimports
    # - lll # Often handled by gofmt/editor settings
    - misspell
    # - nakedret # Style preference
    - prealloc
    - unconvert
    - unparam
    - whitespace

issues:
  # Exclude known issues or specific paths if necessary
  exclude-rules:
    # Exclude some linters from running on tests files if they are too noisy
    - path: _test\.go
      linters:
        - gocyclo
        - dupl
        - gocritic # Often flags common test patterns

  # Set maximum issues count per linter (0 = unlimited)
  max-issues-per-linter: 0
  # Set maximum count of issues with the same text (0 = unlimited)
  max-same-issues: 0

# options for analysis reporting
# report:
#   exclude-generated: true
#   exclude: []
